# Generated by Django 5.0.7 on 2024-08-13 20:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HospitalClinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, verbose_name='Nome')),
                ('address', models.CharField(default='No address provided', max_length=255, verbose_name='Endereço')),
                ('surgery_center_phone', models.CharField(default='0000000000', max_length=15, verbose_name='Telefone do Centro Cirúrgico')),
                ('hospital_phone', models.CharField(default='0000000000', max_length=15, verbose_name='Telefone do Hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Surgeon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, verbose_name='Nome')),
                ('specialty', models.CharField(default='Cirurgião Geral', max_length=255, verbose_name='Especialidade')),
                ('crm', models.CharField(default='', max_length=20, unique=True, verbose_name='CRM')),
                ('phone', models.CharField(default='0000000000', max_length=15, verbose_name='Telefone')),
                ('notes', models.TextField(blank=True, default='No notes', verbose_name='Notas (Sugestões de anestesia)')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('secretaria', 'Secretária'), ('gestor', 'Gestor'), ('anestesista', 'Anestesista'), ('admin', 'Administrador do Sistema')], default='anestesista', max_length=40, verbose_name='Tipo de usuário')),
                ('validado', models.BooleanField(default=False, verbose_name='Validado')),
                ('groups', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Anesthesiologist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, verbose_name='Nome')),
                ('date_of_birth', models.DateField(default='1970-01-01', verbose_name='Data de Nascimento')),
                ('cpf', models.CharField(default='000.000.000-00', max_length=15, unique=True, verbose_name='CPF')),
                ('function', models.CharField(default='Anestesista', max_length=255, verbose_name='Função')),
                ('estado', models.CharField(default='RJ', max_length=2, verbose_name='Estado')),
                ('crm', models.CharField(default='', max_length=20, unique=True, verbose_name='CRM')),
                ('phone', models.CharField(default='5521999999999', max_length=15, verbose_name='Telefone')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='E-mail')),
                ('role_in_group', models.CharField(choices=[('administrador', 'Administrador'), ('gestor', 'Gestor'), ('rotina', 'Rotina'), ('plantonista', 'Plantonista'), ('coringa', 'Coringa')], default='rotina', max_length=255, verbose_name='Cargo no grupo')),
                ('admission_date', models.DateField(default='1970-01-01', verbose_name='Data de Admissão')),
                ('responsible_hours', models.CharField(default='N/A', max_length=50, verbose_name='Horário Responsável')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
    ]
